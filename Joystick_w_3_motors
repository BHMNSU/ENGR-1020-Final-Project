#include <Stepper.h>

const int stepsPerRevolution = 64;  // Adjust according to your motor's steps per revolution

// Initialize the stepper library for three steppers
Stepper small_stepper(stepsPerRevolution, 8, 10, 9, 11);
Stepper small_stepper2(stepsPerRevolution, 3, 5, 4, 6);
Stepper small_stepper3(stepsPerRevolution, 7, 12, 13, 2); // Third motor

bool motorRunning = false;        // Keeps track of whether the third motor is running

void setup() {
  // Set the speed of the motors
  small_stepper.setSpeed(300);    // Set first stepper speed
  small_stepper2.setSpeed(300);   // Set second stepper speed
  small_stepper3.setSpeed(300);   // Set third stepper speed

  pinMode(A2, INPUT_PULLUP);      // Joystick Z-axis button pin
}

void loop() {
  // X-axis control
  int sensorReading = analogRead(A0); // Read value from joystick X-axis
  if (sensorReading < 490) {
    small_stepper.step(1);         // Step left
  }
  if (sensorReading > 540) {
    small_stepper.step(-1);        // Step right
  }
 
  // Y-axis control
  int sensorReading2 = analogRead(A1); // Read value from joystick Y-axis
  if (sensorReading2 < 490) {
    small_stepper2.step(1);        // Step forward
  }
  if (sensorReading2 > 540) {
    small_stepper2.step(-1);       // Step backward
  }

  // Z-axis button control
  static int lastButtonState = HIGH; // Stores the last button state
  int zButtonState = digitalRead(A2); // Read button state

  // Toggle motor state on button press
  if (zButtonState == LOW && lastButtonState == HIGH) {
    motorRunning = !motorRunning;   // Toggle the motor running state
  }
  lastButtonState = zButtonState;  // Update the last button state

  // Control the third motor based on motorRunning state
  if (motorRunning) {
    small_stepper3.step(1); // Rotate continuously clockwise
  }
}
